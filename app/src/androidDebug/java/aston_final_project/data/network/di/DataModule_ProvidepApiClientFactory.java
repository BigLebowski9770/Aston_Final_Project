// Generated by Dagger (https://dagger.dev).
package com.kipreev.aston_final_project.data.network.di;

import com.kipreev.aston_final_project.data.network.api.CharacterApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvidepApiClientFactory implements Factory<CharacterApi> {
  private final DataModule module;

  public DataModule_ProvidepApiClientFactory(DataModule module) {
    this.module = module;
  }

  @Override
  public CharacterApi get() {
    return providepApiClient(module);
  }

  public static DataModule_ProvidepApiClientFactory create(DataModule module) {
    return new DataModule_ProvidepApiClientFactory(module);
  }

  public static CharacterApi providepApiClient(DataModule instance) {
    return Preconditions.checkNotNullFromProvides(instance.providepApiClient());
  }
}
