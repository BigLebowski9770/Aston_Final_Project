// Generated by Dagger (https://dagger.dev).
package com.kipreev.aston_final_project.presentation.di;

import com.kipreev.aston_final_project.domain.characters.GetCharacterInfoUseCase;
import com.kipreev.aston_final_project.presentation.viewmodels.characters.CharacterInfoViewModel;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class PresentationModule_ProvideCharacterInfoViewModelFactory implements Factory<CharacterInfoViewModel> {
  private final PresentationModule module;

  private final Provider<GetCharacterInfoUseCase> getCharacterInfoUseCaseProvider;

  public PresentationModule_ProvideCharacterInfoViewModelFactory(PresentationModule module,
      Provider<GetCharacterInfoUseCase> getCharacterInfoUseCaseProvider) {
    this.module = module;
    this.getCharacterInfoUseCaseProvider = getCharacterInfoUseCaseProvider;
  }

  @Override
  public CharacterInfoViewModel get() {
    return provideCharacterInfoViewModel(module, getCharacterInfoUseCaseProvider.get());
  }

  public static PresentationModule_ProvideCharacterInfoViewModelFactory create(
      PresentationModule module,
      Provider<GetCharacterInfoUseCase> getCharacterInfoUseCaseProvider) {
    return new PresentationModule_ProvideCharacterInfoViewModelFactory(module, getCharacterInfoUseCaseProvider);
  }

  public static CharacterInfoViewModel provideCharacterInfoViewModel(PresentationModule instance,
      GetCharacterInfoUseCase getCharacterInfoUseCase) {
    return Preconditions.checkNotNullFromProvides(instance.provideCharacterInfoViewModel(getCharacterInfoUseCase));
  }
}
