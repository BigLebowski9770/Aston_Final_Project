// Generated by Dagger (https://dagger.dev).
package com.kipreev.aston_final_project.presentation.viewmodels.characters;

import com.kipreev.aston_final_project.domain.characters.GetAllCharactersUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class CharactersListViewModel_Factory implements Factory<CharactersListViewModel> {
  private final Provider<GetAllCharactersUseCase> getAllCharactersUseCaseProvider;

  public CharactersListViewModel_Factory(
      Provider<GetAllCharactersUseCase> getAllCharactersUseCaseProvider) {
    this.getAllCharactersUseCaseProvider = getAllCharactersUseCaseProvider;
  }

  @Override
  public CharactersListViewModel get() {
    return newInstance(getAllCharactersUseCaseProvider.get());
  }

  public static CharactersListViewModel_Factory create(
      Provider<GetAllCharactersUseCase> getAllCharactersUseCaseProvider) {
    return new CharactersListViewModel_Factory(getAllCharactersUseCaseProvider);
  }

  public static CharactersListViewModel newInstance(
      GetAllCharactersUseCase getAllCharactersUseCase) {
    return new CharactersListViewModel(getAllCharactersUseCase);
  }
}
